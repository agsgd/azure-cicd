# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

#pipelines > steps > jobs
jobs:
- job: job1

  steps:
  - bash: echo build firstjob
  - bash: java -version
  - bash: node --version
  - bash: git --version
  - bash: python --version
  - bash: mvn -version
  


  - bash: echo $(Build.ArtifactStagingDirectory)
  - bash: echo $(PipelineLevelVariable)
  - bash: echo $(Build.Repository.Name)
  - bash: echo $(Build.Repository.Provider)
  - bash: echo $(Build.Repository.ID)
  - bash: echo $(Build.ContainerId)
  - bash: echo $(System.JobName)
  - bash: echo $(Build.BuildNumber)
  - bash: echo $(Build.Buildid)
  - bash: echo $(Build.SourceBranchName)
  - bash: echo $(Build.SourcesDirectory)
  
  - bash: echo $(Build.ArtiFactStagingDirectory)
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      Contents: |
        **/*.yaml
        **/*.tf
      TargetFolder: '$(System.DefaultWorkingDirectory)'
  - bash: ls -R $(System.DefaultWorkingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  

#   - script: echo job1 hi Hello, world change!
    
#     displayName: 'Run a one-line script'

#   - script: | 
#       echo Add other tasks to build, test, and deploy your project.
#       echo See https://aka.ms/yaml
#       echo more information
#     displayName: 'Run a multi-line script'
# - job: job2
#   steps:
#     - script: echo job2!
#       displayName: 'Rum online-script'